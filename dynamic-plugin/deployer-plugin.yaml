# Source: openshift-console-plugin/templates/patcher-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployer-plugin-patcher
  labels:
    helm.sh/chart: openshift-console-plugin-0.1.0
    app: deployer-plugin
    app.kubernetes.io/name: deployer-plugin
    app.kubernetes.io/instance: deployer-plugin
    app.kubernetes.io/part-of: deployer-plugin
    app.kubernetes.io/managed-by: Helm
---
# Source: openshift-console-plugin/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployer-plugin
  labels:
    helm.sh/chart: openshift-console-plugin-0.1.0
    app: deployer-plugin
    app.kubernetes.io/name: deployer-plugin
    app.kubernetes.io/instance: deployer-plugin
    app.kubernetes.io/part-of: deployer-plugin
    app.kubernetes.io/managed-by: Helm
---
# Source: openshift-console-plugin/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: deployer-plugin
  namespace: default
  labels:
    helm.sh/chart: openshift-console-plugin-0.1.0
    app: deployer-plugin
    app.kubernetes.io/name: deployer-plugin
    app.kubernetes.io/instance: deployer-plugin
    app.kubernetes.io/part-of: deployer-plugin
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |
    error_log /dev/stdout info;
    events {}
    http {
      access_log         /dev/stdout;
      include            /etc/nginx/mime.types;
      default_type       application/octet-stream;
      keepalive_timeout  65;
      server {
        listen              9443 ssl;
        ssl_certificate     /var/cert/tls.crt;
        ssl_certificate_key /var/cert/tls.key;
        root                /usr/share/nginx/html;
      }
    }
---
# Source: openshift-console-plugin/templates/patcher-clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deployer-plugin-patcher
  namespace: default
  labels:
    helm.sh/chart: openshift-console-plugin-0.1.0
    app: deployer-plugin
    app.kubernetes.io/name: deployer-plugin
    app.kubernetes.io/instance: deployer-plugin
    app.kubernetes.io/part-of: deployer-plugin
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["operator.openshift.io"]
    resources: ["consoles"]
    verbs: ["get","list","patch", "update"]
---
# Source: openshift-console-plugin/templates/patcher-clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: deployer-plugin-patcher
  namespace: default
  labels:
    helm.sh/chart: openshift-console-plugin-0.1.0
    app: deployer-plugin
    app.kubernetes.io/name: deployer-plugin
    app.kubernetes.io/instance: deployer-plugin
    app.kubernetes.io/part-of: deployer-plugin
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deployer-plugin-patcher
subjects:
  - kind: ServiceAccount
    name: deployer-plugin-patcher
    namespace: default
---
# Source: openshift-console-plugin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.openshift.io/serving-cert-secret-name: deployer-plugin-cert
  name: deployer-plugin
  namespace: default
  labels:
    helm.sh/chart: openshift-console-plugin-0.1.0
    app: deployer-plugin
    app.kubernetes.io/name: deployer-plugin
    app.kubernetes.io/instance: deployer-plugin
    app.kubernetes.io/part-of: deployer-plugin
    app.kubernetes.io/managed-by: Helm
spec:
  ports:
    - name: 9443-tcp
      protocol: TCP
      port: 9443
      targetPort: 9443
  selector:
    app: deployer-plugin
    app.kubernetes.io/name: deployer-plugin
    app.kubernetes.io/instance: deployer-plugin
    app.kubernetes.io/part-of: deployer-plugin
  type: ClusterIP
  sessionAffinity: None
---
# Source: openshift-console-plugin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployer-plugin
  namespace: default
  labels:
    helm.sh/chart: openshift-console-plugin-0.1.0
    app: deployer-plugin
    app.kubernetes.io/name: deployer-plugin
    app.kubernetes.io/instance: deployer-plugin
    app.kubernetes.io/part-of: deployer-plugin
    app.kubernetes.io/managed-by: Helm
    app.openshift.io/runtime-namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: deployer-plugin
      app.kubernetes.io/name: deployer-plugin
      app.kubernetes.io/instance: deployer-plugin
      app.kubernetes.io/part-of: deployer-plugin
  template:
    metadata:
      labels:
        helm.sh/chart: openshift-console-plugin-0.1.0
        app: deployer-plugin
        app.kubernetes.io/name: deployer-plugin
        app.kubernetes.io/instance: deployer-plugin
        app.kubernetes.io/part-of: deployer-plugin
        app.kubernetes.io/managed-by: Helm
    spec:
      containers:
        - name: deployer-plugin
          image: quay.io/ibmtz/dynamic-plugin
          ports:
            - containerPort: 9443
              protocol: TCP
          imagePullPolicy: Always
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          volumeMounts:
            - name: deployer-plugin-cert
              readOnly: true
              mountPath: /var/cert
            - name: nginx-conf
              readOnly: true
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: deployer-plugin-cert
          secret:
            secretName: deployer-plugin-cert
            defaultMode: 420
        - name: nginx-conf
          configMap:
            name: deployer-plugin
            defaultMode: 420
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      securityContext: 
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
---
# Source: openshift-console-plugin/templates/consoleplugin.yaml
apiVersion: console.openshift.io/v1
kind: ConsolePlugin
metadata:
  name: deployer-plugin
  namespace: default
  labels:
    helm.sh/chart: openshift-console-plugin-0.1.0
    app: deployer-plugin
    app.kubernetes.io/name: deployer-plugin
    app.kubernetes.io/instance: deployer-plugin
    app.kubernetes.io/part-of: deployer-plugin
    app.kubernetes.io/managed-by: Helm
spec:
  displayName: Deployer plugin
  i18n: 
    loadType: Preload
  backend:
    type: Service
    service:
      name: deployer-plugin
      namespace: default
      port: 9443
      basePath: /
---
# Source: openshift-console-plugin/templates/patch-consoles-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: deployer-plugin-patcher
  namespace: default
  labels:
    helm.sh/chart: openshift-console-plugin-0.1.0
    app: deployer-plugin
    app.kubernetes.io/name: deployer-plugin
    app.kubernetes.io/instance: deployer-plugin
    app.kubernetes.io/part-of: deployer-plugin
    app.kubernetes.io/managed-by: Helm
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  parallelism: 1
  template:
    metadata:
      labels:
        helm.sh/chart: openshift-console-plugin-0.1.0
        app: deployer-plugin
        app.kubernetes.io/name: deployer-plugin
        app.kubernetes.io/instance: deployer-plugin
        app.kubernetes.io/part-of: deployer-plugin
        app.kubernetes.io/managed-by: Helm
    spec:
      restartPolicy: OnFailure
      serviceAccountName: deployer-plugin-patcher
      securityContext: 
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 400
      dnsPolicy: ClusterFirst
      containers:
        - name: deployer-plugin-patcher
          image: registry.redhat.io/openshift4/ose-tools-rhel8@sha256:e44074f21e0cca6464e50cb6ff934747e0bd11162ea01d522433a1a1ae116103
          securityContext: 
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          command:
            - /bin/bash
            - -c
            - |
                existingPlugins=$(oc get consoles.operator.openshift.io cluster -o json | jq -c '.spec.plugins // []')
                mergedPlugins=$(jq --argjson existingPlugins "${existingPlugins}" --argjson consolePlugin '["deployer-plugin"]' -c  -n '$existingPlugins + $consolePlugin | unique')
                patchedPlugins=$(jq --argjson mergedPlugins $mergedPlugins -n -c  '{ "spec": { "plugins": $mergedPlugins } }')
                oc patch consoles.operator.openshift.io cluster --patch $patchedPlugins  --type=merge
